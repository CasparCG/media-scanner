{
	"name": "scanner",
	"version": "1.3.0",
	"private": true,
	"description": "",
	"license": "LGPL-3.0",
	"main": "dist/index.js",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/CasparCG/media-scanner.git"
	},
	"homepage": "https://github.com/CasparCG/media-scanner",
	"scripts": {
		"dev": "nodemon ./src",
		"build": "run build:ts && node tools/build.mjs",
		"build:ts": "rimraf dist && tsc -b",
		"build-linux-arm64": "node tools/build.mjs linux arm64",
		"build-linux-x64": "node tools/build.mjs linux x64",
		"build-win32-x64": "node tools/build.mjs win32 x64",
		"prepare": "husky install",
		"lint:raw": "run eslint --ext .ts --ext .js --ext .tsx --ext .jsx --ext .mts --ext .mjs --ignore-pattern dist",
		"lint": "yarn lint:raw .",
		"lint-fix": "yarn lint --fix",
		"unit": "node tools/fetch_ffmpeg.mjs && yarn jest",
		"license-validate": "yarn sofie-licensecheck",
		"eslint": "./node_modules/.bin/eslint"
	},
	"engines": {
		"node": ">=18.18"
	},
	"author": "",
	"dependencies": {
		"cheerio": "^1.0.0-rc.12",
		"chokidar": "^3.5.3",
		"cors": "^2.8.5",
		"express": "^4.18.2",
		"mkdirp": "^3.0.1",
		"moment": "^2.29.4",
		"nconf": "^0.12.1",
		"pino": "^8.16.2",
		"pino-http": "^8.5.1",
		"pouchdb-node": "^7.3.1",
		"recursive-readdir": "^2.2.3",
		"rxjs": "^7.8.1",
		"xml2js": "^0.6.2"
	},
	"devDependencies": {
		"@sofie-automation/code-standard-preset": "^2.5.1",
		"@types/cors": "^2.8.17",
		"@types/express": "^4.17.21",
		"@types/jest": "^29.5.11",
		"@types/mkdirp": "^2.0.0",
		"@types/nconf": "^0.10.6",
		"@types/node": "^18.19.2",
		"@types/pino": "^7.0.5",
		"@types/pouchdb-node": "^6.1.7",
		"@types/recursive-readdir": "^2.2.4",
		"@types/xml2js": "^0.4.14",
		"husky": "^8.0.3",
		"jest": "^29.7.0",
		"lint-staged": "^14.0.1",
		"nodemon": "^2.0.22",
		"pkg": "5.8.1",
		"rimraf": "^5.0.5",
		"ts-jest": "^29.1.1",
		"ts-node": "^10.9.1",
		"tslib": "^2.6.2",
		"typescript": "^5.3.2",
		"zip-a-folder": "^1.1.7"
	},
	"packageManager": "yarn@4.0.2",
	"prettier": "@sofie-automation/code-standard-preset/.prettierrc.json",
	"lint-staged": {
		"*.{css,json,md,scss}": [
			"prettier --write"
		],
		"*.{ts,tsx,js,jsx,mts,mjs}": [
			"yarn lint:raw --fix"
		]
	}
}
